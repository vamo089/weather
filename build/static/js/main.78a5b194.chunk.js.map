{"version":3,"sources":["store/reducers/index.js","store/actions/cityList.js","store/index.js","store/actions/slider.js","store/actions/daily.js","store/actions/index.js","components/Daily.jsx","components/Slider.jsx","components/Loader.jsx","components/CityField.jsx","components/WeatherScreen.jsx","App.js","index.js"],"names":["getCitiesListDelay","reducer","handleActions","state","currentCity","payload","weather","dailyWeather","cityList","slider","city","temp","description","icon","rootReducer","combineReducers","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","logger","thunk","setSlider","createActions","openHourlySlider","id","dispatch","getState","hourly","saveCityList","setCityWeather","sliderWasChange","splitedCount","step","stepNumber","formDailyWeather","days","dayFlag","dailyCollection","forEach","item","date","moment","unix","dt","day","dayName","format","hour","push","main","filter","toFixed","saveDailyWeather","getCitiesList","target","value","clearTimeout","setTimeout","getCitiesListRequest","fetch","then","response","json","data","length","getCityWeatherRequest","lastRequest","countryCode","setWeatherFromList","cityName","change","getDaysWeather","list","initialization","setMainScreen","setInterval","detectCityRequest","cityData","cod","name","toMainScreen","getFormValues","Container","styled","div","DayContainer","DayTitle","DayTemp","connect","bindActionCreators","actions","map","i","key","title","onClick","slice","className","props","width","railStyle","backgroundColor","trackStyle","dotStyle","border","markStyle","color","fontFamily","fontSize","strong","marginLeft","hoursCount","style","label","parseFloat","split","handleStyle","marks","onAfterChange","LoaderBody","Loader","Input","Field","CityList","ul","CityListItem","li","CityField","onChange","placeholder","component","type","autoComplete","reduxForm","Top","TodayContainer","TodayTitle","TodayTemp","Bottom","Slider","GlobalStyle","createGlobalStyle","Title","h1","EdgeBackground","Background","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78a5b194.chunk.js","sourcesContent":["import {combineReducers} from 'redux'\r\nimport {handleActions} from \"redux-actions\";\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nconst defaultState = {\r\n\tweather: {\r\n\t\tcity: null,\r\n\t\ttemp: null,\r\n\t\tdescription: null,\r\n\t\ticon: null\r\n\t},\r\n\tcityList: null,\r\n\tslider: null\r\n};\r\n\r\nconst reducer = handleActions(\r\n\t{\r\n\t\t'SET_CURRENT_CITY': (state, {payload}) => {\r\n\t\t\treturn {...state, currentCity: payload}\r\n\t\t},\r\n\t\t'SET_CITY_WEATHER': (state, {payload}) => {\r\n\t\t\treturn {...state, weather: payload}\r\n\t\t},\r\n\t\t'SAVE_DAILY_WEATHER': (state, {payload}) => {\r\n\t\t\treturn {...state,dailyWeather: payload}\r\n\t\t},\r\n\t\t'SAVE_CITY_LIST': (state, {payload}) => {\r\n\t\t\treturn {...state,cityList: payload}\r\n\t\t},\r\n\t\t'SET_SLIDER': (state, {payload}) => {\r\n\t\t\treturn {...state,slider: payload}\r\n\t\t}\r\n\t}, defaultState);\r\n\r\nconst rootReducer = combineReducers({\r\n\treducer,\r\n\tform: formReducer\r\n});\r\nexport default rootReducer;","import {getCityWeatherRequest,getDaysWeather, setCityWeather} from \"./index\";\r\nimport {createActions} from \"redux-actions\";\r\nimport {change} from \"redux-form\";\r\nimport {setSlider} from \"./slider\";\r\nimport {formDailyWeather} from \"./daily\";\r\n\r\n\r\nexport const {\r\n\tsaveCityList\r\n} = createActions(\r\n\t{\r\n\t\t'SAVE_CITY_LIST': payload => payload\r\n\t},\r\n);\r\n\r\nlet getCitiesListDelay;\r\n\r\nexport const getCitiesList = ({target}) => {\r\n\treturn (dispatch,getState) => {\r\n\t\tconst {value} = target;\r\n\t\tconst SUGGESTION_DELAY_TIME = 1000;\r\n\r\n\t\tif (value) {\r\n\t\t\tdispatch(saveCityList([]));\r\n\r\n\t\t\tif (!getCitiesListDelay) {\r\n\t\t\t\tgetCitiesListDelay = setTimeout(() => {\r\n\t\t\t\t\tdispatch(getCitiesListRequest(value))\r\n\t\t\t\t}, SUGGESTION_DELAY_TIME);\r\n\t\t\t} else {\r\n\t\t\t\tclearTimeout(getCitiesListDelay);\r\n\t\t\t\tgetCitiesListDelay = setTimeout(() => {\r\n\t\t\t\t\tdispatch(getCitiesListRequest(value))\r\n\t\t\t\t}, SUGGESTION_DELAY_TIME);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst {slider} = getState().reducer;\r\n\t\tif(slider){\r\n\t\t\tdispatch(setSlider(null))\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst getCitiesListRequest = value =>{\r\n\treturn dispatch =>{\r\n\t\tconst cityList = [];\r\n\t\tfetch(`https://wft-geo-db.p.rapidapi.com/v1/geo/cities?namePrefix=${value}`, {\r\n\t\t\t\"headers\": {\r\n\t\t\t\t\"x-rapidapi-host\": \"wft-geo-db.p.rapidapi.com\",\r\n\t\t\t\t\"x-rapidapi-key\": \"5dfbe0fb22msh73b75a7c5fb4eb4p14268ajsn2c16ebc4028b\"\r\n\t\t\t}\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(({data}) => {\r\n\t\t\t\tif(data.length){\r\n\t\t\t\t\tdata.forEach(item => {\r\n\t\t\t\t\t\tconst {city} = item;\r\n\t\t\t\t\t\tgetCityWeatherRequest(city)\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tconst lastRequest = data[data.length - 1].city === city;\r\n\t\t\t\t\t\t\t\tif (response) {\r\n\t\t\t\t\t\t\t\t\tresponse.countryCode = item.countryCode;\r\n\t\t\t\t\t\t\t\t\tcityList.push(response);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (lastRequest) {\r\n\t\t\t\t\t\t\t\t\tdispatch(saveCityList(cityList));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdispatch(saveCityList(null));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t}\r\n};\r\n\r\nexport const setWeatherFromList = id => {\r\n\treturn (dispatch,getState) => {\r\n\t\tconst {cityList} = getState().reducer;\r\n\t\tconst cityName = cityList[id].city;\r\n\t\tdispatch(change('city', 'city', cityName));\r\n\t\tdispatch(setCityWeather(cityList[id]));\r\n\t\tdispatch(saveCityList(null));\r\n\t\tgetDaysWeather(cityName).then(list => dispatch(formDailyWeather(list)))\r\n\t}\r\n};","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport reducers from \"./reducers\";\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(\r\n    logger,\r\n    thunk\r\n)));\r\nexport default store","import {createActions} from \"redux-actions\";\r\nimport {saveCityList, setCityWeather} from \"./index\";\r\n\r\nexport const {\r\n\tsetSlider,\r\n} = createActions(\r\n\t{\r\n\t\t'SET_SLIDER': payload => payload,\r\n\t},\r\n);\r\n\r\nexport const openHourlySlider  = id =>{\r\n\treturn (dispatch,getState) =>{\r\n\t\tconst {dailyWeather} = getState().reducer;\r\n\t\tconst {hourly} = dailyWeather[id];\r\n\t\tdispatch(setSlider(hourly));\r\n\t\tdispatch(saveCityList(null));\r\n\t\tconst {slider} = getState().reducer;\r\n\t\tdispatch(setCityWeather(slider[0]));\r\n\t}\r\n};\r\n\r\nexport const sliderWasChange = (splitedCount,step) =>{\r\n\treturn  (dispatch,getState) =>{\r\n\t\tconst stepNumber = splitedCount/step;\r\n\t\tconst {slider} = getState().reducer;\r\n\r\n\t\tdispatch(setCityWeather(slider[stepNumber - 1]));\r\n\t}\r\n};","import moment from 'moment';\r\nimport {saveDailyWeather} from \"./index\";\r\n\r\nexport const formDailyWeather = (days) => {\r\n\treturn dispatch => {\r\n\t\tlet dayFlag;\r\n\t\tlet dailyCollection = [];\r\n\r\n\t\tdays.forEach(item => {\r\n\t\t\tconst date = moment.unix(item.dt);\r\n\t\t\tconst day = date.day();\r\n\t\t\tconst dayName = date.format('dddd');\r\n\t\t\tconst hour = date.format('hha');\r\n\r\n\t\t\tif (day !== dayFlag) {\r\n\t\t\t\tdailyCollection.push({day: dayName, hourly: []});\r\n\t\t\t\tdayFlag = day;\r\n\t\t\t}\r\n\r\n\t\t\tif (day === dayFlag) {\r\n\t\t\t\tconst {description, icon, main} = item.weather[0];\r\n\t\t\t\tconst some = dailyCollection.filter(item => item.day === dayName)[0];\r\n\r\n\t\t\t\tsome.hourly.push({\r\n\t\t\t\t\tdayName,\r\n\t\t\t\t\tmain, icon,\r\n\t\t\t\t\thour, description,\r\n\t\t\t\t\ttemp: item.main.temp.toFixed(1)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\tdispatch(saveDailyWeather(dailyCollection))\r\n\t}\r\n};","import {createActions} from \"redux-actions\";\r\nimport {change} from 'redux-form'\r\nimport {setSlider} from \"./slider\";\r\nimport {formDailyWeather} from \"./daily\";\r\nimport {getFormValues} from 'redux-form'\r\nexport {saveCityList,getCitiesList,setWeatherFromList} from './cityList'\r\nexport {openHourlySlider,setSlider,sliderWasChange} from './slider'\r\nexport const {\r\n\tsetCityWeather,\r\n\tsaveDailyWeather,\r\n} = createActions(\r\n\t{\r\n\t\t'SET_CITY_WEATHER': payload => payload,\r\n\t\t'SAVE_DAILY_WEATHER': payload => payload,\r\n\t},\r\n);\r\n\r\n\r\nexport const initialization = () => {\r\n\treturn (dispatch,getState) => {\r\n\t\tdispatch(setMainScreen());\r\n\r\n\t\tconst TIME_INTERVAL_FOR_UPDATING = 60000;\r\n\t\tsetInterval(()=>{\r\n\t\t\tconst {slider} = getState().reducer;\r\n\t\t\tif(!slider){\r\n\t\t\t\tdispatch(setMainScreen());\r\n\t\t\t}\r\n\t\t},TIME_INTERVAL_FOR_UPDATING);\r\n\t}\r\n};\r\n\r\nconst setMainScreen = () =>{\r\n    return dispatch =>{\r\n\t\tdetectCityRequest()\r\n\t\t\t.then(({city}) => {\r\n\t\t\t\tdispatch(change('city', 'city', city));\r\n\t\t\t\tgetCityWeatherRequest(city)\r\n\t\t\t\t\t.then(cityData => dispatch(setCityWeather(cityData)));\r\n\t\t\t\tgetDaysWeather(city).then(list => dispatch(formDailyWeather(list)));\r\n\t\t\t})\r\n\t}\r\n};\r\n\r\n\r\nconst detectCityRequest = () => {\r\n\treturn fetch('https://api.ipgeolocation.io/ipgeo?apiKey=1cde62f22bfd4c8387f89ddef6daf3a0&fields=city')\r\n\t\t.then(response => response.json());\r\n};\r\n\r\nexport const getCityWeatherRequest = city => {\r\n\treturn fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=b9c419a5c04ecd308756f920bb6aa987`)\r\n\t\t.then(response => {\r\n\t\t\treturn response.json()\r\n\t\t}).then(data => {\r\n\t\t\tif (data.cod === 200) {\r\n\t\t\t\tconst {main: {temp}, weather,name} = data;\r\n\t\t\t\tconst {icon, description, main} = weather[0];\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttemp: temp.toFixed(1),\r\n\t\t\t\t\ticon, description, main,city: name\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n};\r\n\r\nexport const getDaysWeather = (city) => {\r\n\treturn fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b9c419a5c04ecd308756f920bb6aa987`)\r\n\t\t.then(response => {\r\n\t\t\treturn response.json()\r\n\t\t}).then(data => data.list)\r\n};\r\n\r\n\r\nexport const toMainScreen = () => {\r\n\treturn (dispatch,getState) => {\r\n\t\tconst {city} = getFormValues('city')(getState());\r\n\r\n\t\tgetCityWeatherRequest(city)\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif(response){\r\n\t\t\t\t\tdispatch(setCityWeather(response));\r\n\t\t\t\t\tgetDaysWeather(city).then(list => dispatch(formDailyWeather(list)));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tdispatch(setMainScreen())\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tdispatch(setSlider(null));\r\n\t}\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from \"styled-components\";\r\nimport * as actions from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n`;\r\n\r\nconst DayContainer = styled.div`\r\n\twidth: 100%;\r\n\tmargin-top: 5px;\r\n\tmargin-bottom: 5px;\r\n\tfont-size: 20px;\r\n\ttext-align: center;\r\n\tcursor: pointer;\r\n\t&:not(:last-child){\r\n\t\tborder-right: 2px solid rgba(255, 255, 255, 0.5);\r\n\t}\r\n`;\r\n\r\nconst DayTitle = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tp{\r\n\t\tmargin: 0 5px 0 0;\r\n\t\tfont-size: 24px;\r\n\t}\r\n\ti{\r\n\t\tfont-size: 30px;\r\n\t}\r\n`;\r\n\r\nconst DayTemp = styled.div`\r\n\tmargin-top: 2px;\r\n\tfont-family: 'OpenSansBold',sans-serif;\r\n\tfont-size: 26px;\r\n\tsup{\r\n\t\tfont-weight: 600;\r\n\t}\r\n`;\r\n\r\nconst Daily = ({dailyWeather, openHourlySlider}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{\r\n\t\t\t\tdailyWeather &&\r\n\t\t\t\tdailyWeather.map((item,i) =>{\r\n\t\t\t\t\tconst {day,hourly} = item;\r\n\t\t\t\t\tconst {temp,icon,description} = hourly.filter(item => item.hour === '12am' || '03am')[0];\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<DayContainer key={i} title={description} onClick={()=>{openHourlySlider(i)}}>\r\n\t\t\t\t\t\t\t<DayTitle>\r\n\t\t\t\t\t\t\t\t<p>{day.slice(0,3)}</p>\r\n\t\t\t\t\t\t\t\t<i className={`owi owi-${icon}`}> </i>\r\n\t\t\t\t\t\t\t</DayTitle>\r\n\t\t\t\t\t\t\t<DayTemp>{temp}<sup>&#8451;</sup></DayTemp>\r\n\t\t\t\t\t\t</DayContainer>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tconst {openHourlySlider} = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\topenHourlySlider\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tdailyWeather: state.reducer.dailyWeather\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Daily);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from \"styled-components\";\r\nimport Slider from 'rc-slider';\r\nimport 'rc-slider/assets/index.css';\r\nimport * as actions from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: ${props => `${props.width }0%`};\r\n    padding: 50px;\r\n    margin: auto;\r\n    .rc-slider-mark{\r\n    \tleft: -33px;\r\n    }\r\n`;\r\n\r\nconst railStyle = {\r\n\tbackgroundColor: 'rgba(0, 0, 0, 0.5)'\r\n};\r\nconst trackStyle = {\r\n\tbackgroundColor: '#000'\r\n};\r\nconst dotStyle = {\r\n\tborder: '2px solid #000'\r\n};\r\nconst markStyle = {\r\n\tcolor: '#000',\r\n\tfontFamily: 'OpenSans,sans-serif',\r\n\tfontSize: '23px',\r\n\tstrong:{\r\n\t\tfontSize: '16px',\r\n\t\tmarginLeft: '2px'\r\n\t}\r\n};\r\n\r\nconst SliderBody = ({slider,sliderWasChange}) => {\r\n\tlet hoursCount = slider.length;\r\n\tlet data = {};\r\n\tlet step;\r\n\tfor (let i = 0; i < hoursCount; i++) {\r\n\t\tstep = 100/hoursCount;\r\n\t\tconst {hour} = slider[i];\r\n\r\n\t\tdata[step * (i + 1)] = {\r\n\t\t\tstyle: markStyle,\r\n\t\t\tlabel: <span>{parseFloat(hour)}<strong style={markStyle.strong}>{hour.split(parseFloat(hour))[1]}</strong> </span>,\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container width={hoursCount}>\r\n\t\t\t<Slider handleStyle={dotStyle} dotStyle={dotStyle} trackStyle={trackStyle}\r\n\t\t\t\t\trailStyle={railStyle} marks={data} step={null}\r\n\t\t\t\t\tonAfterChange={(splitedCount)=>{sliderWasChange(splitedCount,step)}}/>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tconst {openHourlySlider,sliderWasChange} = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\topenHourlySlider,\r\n\t\tsliderWasChange\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tslider: state.reducer.slider\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SliderBody);\r\n","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst LoaderBody = styled.div`\r\n\ttext-align: center;\r\n\tfont-size: 28px;\r\n\ti{\r\n\t\tanimation: rotate 2s linear infinite;\r\n\t}\r\n\t@keyframes rotate {\r\n\t\t0% { transform: rotate(0deg); }\r\n\t\t100% { transform: rotate(90deg); }\r\n\t};\r\n`;\r\n\r\nconst Loader = () => {\r\n\treturn (\r\n\t\t<LoaderBody>\r\n\t\t\t<i className='owi owi-01d'> </i>\r\n\t\t</LoaderBody>\r\n\t);\r\n};\r\n\r\nexport default Loader;","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport styled from \"styled-components\";\r\nimport * as actions from '../store/actions'\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Container = styled.div`\r\n\tmargin: auto;\r\n\tposition: relative;\r\n`;\r\n\r\nconst Input = styled(Field)`\r\n\tfont-size: 36px;\r\n\ttext-align: center;\r\n    border: none;\r\n    background: transparent;\r\n    line-height: normal;\r\n    &:focus{\r\n    \toutline: none;\r\n    }\r\n`;\r\n\r\nconst CityList = styled.ul`\r\n\ttop: 66px;\r\n\tz-index: 1;\r\n\tmargin: 0;\r\n\tpadding-right: 10px;\r\n\tpadding-left: 10px;\r\n`;\r\nconst CityListItem = styled.li`\r\n\tfont-size: 20px;\r\n\ttext-align: center;\r\n\tpadding: 5px;\r\n\tcursor: pointer;\r\n\tdisplay: block;\r\n\t&:first-child{\r\n\t\tborder-top: 2px solid rgba(255, 255, 255, 0.5);\r\n\t}\r\n\t&:hover{\r\n\t\tbackground: #ccc;\r\n\t}\r\n`;\r\n\r\nlet CityField = ({getCitiesList, cityList,setWeatherFromList}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Input onChange={getCitiesList} placeholder='city' name='city' component='input' type='text'\r\n\t\t\t\t   autoComplete='off'/>\r\n\t\t\t<CityList>\r\n\t\t\t\t{cityList && !cityList.length && <Loader />}\r\n\t\t\t\t{\r\n\t\t\t\t\tcityList &&\r\n\t\t\t\t\tcityList.map((item, i) => {\r\n\t\t\t\t\t\tconst {city, countryCode} = item;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CityListItem key={i} onClick={()=>{setWeatherFromList(i)}}>\r\n\t\t\t\t\t\t\t\t{city}, {countryCode}\r\n\t\t\t\t\t\t\t</CityListItem>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</CityList>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nCityField = reduxForm({\r\n\tform: 'city'\r\n})(CityField);\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcityList: state.reducer.cityList\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst {getCitiesList,setWeatherFromList} = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tgetCitiesList,\r\n\t\tsetWeatherFromList\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CityField);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport styled from \"styled-components\";\r\nimport Daily from '../components/Daily'\r\nimport Slider from '../components/Slider'\r\nimport '../../node_modules/open-weather-icons/dist/css/open-weather-icons.css'\r\nimport CityField from \"./CityField\";\r\nimport * as actions from \"../store/actions\";\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbox-sizing: border-box;\r\n\tborder-radius: 3px;\r\n\tbackground:rgba(255, 255, 255, 0.5);\r\n\tborder: 3px solid rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Top = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n`;\r\n\r\nconst TodayContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tmargin-top: 10px;\r\n\tmargin-bottom: 10px;\r\n\tpadding-left: 20px;\r\n\tpadding-right: 12px;\r\n\tborder-right: 2px solid rgba(255, 255, 255, 0.5);\r\n\tcursor: ${props => props.slider ? 'pointer' : 'auto'};\r\n\ti{\r\n\t\tfont-size: 60px;\r\n\t\tmargin-right: 5px;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n`;\r\n\r\nconst TodayTitle = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\tmargin-right: 5px;    \r\n    color: #000;\r\n    font-size: 27px;\r\n    text-align: center;\r\n\tp{\r\n\t\tmargin: 0;\r\n\t}\r\n\tp:nth-child(1){\r\n\t\tfont-family: 'OpenSansBold',sans-serif;\r\n\t\t&::first-letter{\r\n\t\t\ttext-transform: uppercase;\r\n\t\t}\r\n\t}\r\n\tp:nth-child(2){\r\n\t\tfont-family: 'OpenSans',sans-serif;\r\n\t}\r\n`;\r\nconst TodayTemp = styled.div`\r\n\talign-self: center;\r\n\tfont-size: 35px;\r\n\twhite-space: nowrap;\r\n\tfont-family: 'OpenSansBold',sans-serif;\r\n\twidth: 85px;  \r\n  sup{\r\n\ttop: -1em;\r\n\tleft: -0.5em;\r\n\tfont-size: 14px;\r\n\tfont-weight: 600;\r\n  }\r\n`;\r\n\r\nconst Bottom = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content:space-between;\r\n\tborder-top: 2px solid rgba(255, 255, 255, 0.5);\r\n\tmargin-right: 10px;\r\n\tmargin-left: 10px;\r\n`;\r\n\r\nconst WeatherScreen = ({weather, slider,toMainScreen}) => {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Top>\r\n\t\t\t\t<TodayContainer slider={slider} onClick={slider && toMainScreen}>\r\n\t\t\t\t\t<TodayTitle title={weather.description}>\r\n\t\t\t\t\t\t<p>{weather.main}</p>\r\n\t\t\t\t\t\t<p>{weather.dayName || 'Today'}</p>\r\n\t\t\t\t\t</TodayTitle>\r\n\t\t\t\t\t<i className={`owi owi-${weather.icon}`}> </i>\r\n\t\t\t\t\t<TodayTemp>{weather.temp} <sup>&#8451;</sup></TodayTemp>\r\n\t\t\t\t</TodayContainer>\r\n\t\t\t\t<CityField/>\r\n\t\t\t</Top>\r\n\t\t\t<Bottom>\r\n\t\t\t\t{slider ? <Slider/> : <Daily/>}\r\n\t\t\t</Bottom>\r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\tconst {toMainScreen} = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\ttoMainScreen\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tweather: state.reducer.weather,\r\n\t\tslider: state.reducer.slider\r\n\t}\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WeatherScreen);\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport * as actions from './store/actions'\r\nimport styled, {createGlobalStyle} from \"styled-components\";\r\nimport {Normalize} from 'styled-normalize'\r\nimport WeatherScreen from './components/WeatherScreen'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body{\r\n  \t@font-face {\r\n\t\tsrc: url('./fonts/OpenSans-Regular.ttf');\r\n\t\tfont-family: 'OpenSans';\r\n\t}\r\n    @font-face {\r\n\t\tsrc: url('./fonts/OpenSans-Bold.ttf');\r\n\t\tfont-family: 'OpenSansBold';\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%,-50%);\r\n  font-family: 'OpenSans',sans-serif;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  color: #fff;\r\n  font-size: 70px;\r\n  text-align: center;\r\n  font-family: 'OpenSansBold',sans-serif;\r\n`;\r\n\r\nconst EdgeBackground = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    margin: auto;\r\n    background: url(\"./images/background.jpg\") no-repeat;\r\n    background-size: cover;\r\n    filter:contrast(0.7);\r\n`;\r\nconst Background = styled.div`\r\n    width: 66%;\r\n    margin: auto;\r\n    min-height: 100vh;\r\n    background: url(\"./images/background.jpg\") no-repeat;\r\n    background-size: cover;\r\n    filter: brightness(0.6);\r\n    border-right: solid rgba(255, 255, 255, 0.5);\r\n    border-left: solid rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nfunction App({initialization}) {\r\n\tuseEffect(() => {\r\n\t\tinitialization();\r\n\t}, [initialization]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Normalize/>\r\n\t\t\t<GlobalStyle/>\r\n\t\t\t<EdgeBackground/>\r\n\t\t\t<Background/>\r\n\t\t\t<Container>\r\n\t\t\t\t<Title>Bundle Up!</Title>\r\n\t\t\t\t<WeatherScreen/>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\tconst {initialization} = bindActionCreators(actions, dispatch);\r\n\treturn {\r\n\t\tinitialization\r\n\t}\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(App);","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}